# No need to load profile when nix-darwin is set
# source ~/.nix-profile/etc/profile.d/nix.sh

# Example aliases
# alias zshconfig="mate ~/.zshrc"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

DISABLE_MAGIC_FUNCTIONS="true"

# aliases
# some more ls aliases
# t - sort by time
alias ll='ls -althF'
alias la='ls -A'
alias l='ls -CF'
alias tmux='tmux -2'
alias ddc='docker-compose'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
alias ex='emacs -nw'
alias gitk='gitk --date-order'
alias gtime='gtime -f "real %E\nuser %U:%P\nmemory: %M\nI/O %I/%O"'

source ~/functions.sh
source ~/.env.sh

# editor
export LS_COLORS="ow=01;90:di=01;90:ln=04;90"
export ALTERNATE_EDITOR=""
export EDITOR=~/bin/ec


function vw {
  source $(pyenv which virtualenvwrapper.sh)
}

function pyenv-venvs {
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
}

function trinity {
    source ~/bin/trinity.sh
}

alias setup="python setup.py"

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
setopt SHARE_HISTORY

bindkey -e
bindkey '\e\e[C' forward-word
bindkey '\e\e[D' backward-word

alias route_gprs='sudo rounte delete default; sudo route add default 192.168.44.1'

# OPAM configuration
. /Users/signalpillar/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true
alias opam2="OPAMROOT=~/.opam2 /Users/signalpillar/.opam/4.02.3/lib/opam-devel/opam"
# Java configuration
# export JAVA_HOME=$(/usr/libexec/java_home)

eval "$(direnv hook zsh)"
